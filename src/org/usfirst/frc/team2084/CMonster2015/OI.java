/* 
 * Copyright (c) 2015 RobotsByTheC. All rights reserved.
 *
 * Open Source Software - may be modified and shared by FRC teams. The code must
 * be accompanied by the BSD license file in the root directory of the project.
 */
package org.usfirst.frc.team2084.CMonster2015;

import org.usfirst.frc.team2084.CMonster2015.commands.ClearFaultsCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.CloseToteGateCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.DriveToLocationCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.ExtendToteEjectorCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.FallbackDriveCommandGroup;
import org.usfirst.frc.team2084.CMonster2015.commands.FirstRaiseToteLifterCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.LowerContainerHookCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.LowerToteLifterCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.NormalDriveCommandGroup;
import org.usfirst.frc.team2084.CMonster2015.commands.OpenToteGateCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.RaiseContainerHookCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.RaiseToteLifterCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.ResetGyroCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.RetractToteEjectorCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.RotateToCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.SetEncodersEnabledCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.SetGyroEnabledCommand;
import org.usfirst.frc.team2084.CMonster2015.commands.SetHeadingCommand;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.buttons.NetworkButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton normalDriveButton;
    public JoystickButton fallbackDriveButton;
    public JoystickButton resetGyroButton;
    public Joystick driveJoystick;
    public JoystickButton firstRaiseToteLifterButton;
    public JoystickButton raiseToteLifterButton;
    public JoystickButton lowerToteLifterButton;
    public JoystickButton extendToteEjectorButton;
    public JoystickButton retractToteEjectorButton;
    public JoystickButton closeGateButton;
    public JoystickButton openGateCommand;
    public Joystick secondaryJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public NetworkButton gyroEnableButton;

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        secondaryJoystick = new Joystick(1);
        
        openGateCommand = new JoystickButton(secondaryJoystick, 2);
        openGateCommand.whenPressed(new OpenToteGateCommand());
        closeGateButton = new JoystickButton(secondaryJoystick, 4);
        closeGateButton.whenPressed(new CloseToteGateCommand());
        retractToteEjectorButton = new JoystickButton(secondaryJoystick, 1);
        retractToteEjectorButton.whileHeld(new RetractToteEjectorCommand());
        extendToteEjectorButton = new JoystickButton(secondaryJoystick, 3);
        extendToteEjectorButton.whileHeld(new ExtendToteEjectorCommand());
        lowerToteLifterButton = new JoystickButton(secondaryJoystick, 7);
        lowerToteLifterButton.whenPressed(new LowerToteLifterCommand());
        raiseToteLifterButton = new JoystickButton(secondaryJoystick, 5);
        raiseToteLifterButton.whenPressed(new RaiseToteLifterCommand());
        firstRaiseToteLifterButton = new JoystickButton(secondaryJoystick, 6);
        firstRaiseToteLifterButton.whenPressed(new FirstRaiseToteLifterCommand());
        driveJoystick = new Joystick(0);
        
        resetGyroButton = new JoystickButton(driveJoystick, 12);
        resetGyroButton.whenPressed(new ResetGyroCommand());
        fallbackDriveButton = new JoystickButton(driveJoystick, 10);
        fallbackDriveButton.whenPressed(new FallbackDriveCommandGroup());
        normalDriveButton = new JoystickButton(driveJoystick, 9);
        normalDriveButton.whenPressed(new NormalDriveCommandGroup());

	    
        // SmartDashboard Buttons
        SmartDashboard.putData("Reset Gyro Command", new ResetGyroCommand());

        SmartDashboard.putData("Rotate To Command", new RotateToCommand());

        SmartDashboard.putData("Drive To Location Command", new DriveToLocationCommand());

        SmartDashboard.putData("First Raise Tote Lifter Command", new FirstRaiseToteLifterCommand());

        SmartDashboard.putData("Raise Tote Lifter Command", new RaiseToteLifterCommand());

        SmartDashboard.putData("Lower Tote Lifter Command", new LowerToteLifterCommand());

        SmartDashboard.putData("Extend Tote Ejector Command", new ExtendToteEjectorCommand());

        SmartDashboard.putData("Retract Tote Ejector Command", new RetractToteEjectorCommand());

        SmartDashboard.putData("Raise Container Hook Command", new RaiseContainerHookCommand());

        SmartDashboard.putData("Lower Container Hook Command", new LowerContainerHookCommand());

        SmartDashboard.putData("Open Tote Gate Command", new OpenToteGateCommand());

        SmartDashboard.putData("Close Tote Gate Command", new CloseToteGateCommand());

        SmartDashboard.putData("Set Heading Command", new SetHeadingCommand());

        SmartDashboard.putData("Clear Faults Command", new ClearFaultsCommand());

        SmartDashboard.putData("Set Gyro Enabled Command", new SetGyroEnabledCommand());

        SmartDashboard.putData("Set Encoders Enabled Command", new SetEncodersEnabledCommand());


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getDriveJoystick() {
        return driveJoystick;
    }

    public Joystick getSecondaryJoystick() {
        return secondaryJoystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
