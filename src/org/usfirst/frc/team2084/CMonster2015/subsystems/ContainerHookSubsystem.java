/* 
 * Copyright (c) 2015 RobotsByTheC. All rights reserved.
 *
 * Open Source Software - may be modified and shared by FRC teams. The code must
 * be accompanied by the BSD license file in the root directory of the project.
 */
package org.usfirst.frc.team2084.CMonster2015.subsystems;

import org.usfirst.frc.team2084.CMonster2015.RobotMap;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.MotorSafety;
import edu.wpi.first.wpilibj.MotorSafetyHelper;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 * Subsystem for the container hook arm.
 */
public class ContainerHookSubsystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DigitalInput upperLimitSwitch = RobotMap.containerHookSubsystemUpperLimitSwitch;
    SpeedController talon = RobotMap.containerHookSubsystemTalon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    private final MotorSafetyHelper watchdog = new MotorSafetyHelper((MotorSafety) talon);

    public enum State {
        RAISING(0.7),
        STOPPED(0.0),
        LOWERING(-0.5);

        private double speed;

        private State(double speed) {
            this.speed = speed;
        }
    }

    private State state;

    public void setState(State state) {
        this.state = state;

        watchdog.setSafetyEnabled(state != State.STOPPED);
        talon.set(state.speed);
    }

    public State getState() {
        return state;
    }

    public boolean isRaised() {
        return upperLimitSwitch.get();
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}
