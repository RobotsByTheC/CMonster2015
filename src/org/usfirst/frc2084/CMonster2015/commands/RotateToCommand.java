/* 
 * Copyright (c) 2014 RobotsByTheC. All rights reserved.
 *
 * Open Source Software - may be modified and shared by FRC teams. The code must
 * be accompanied by the BSD license file in the root directory of the project.
 */
package org.usfirst.frc2084.CMonster2015.commands;

import org.usfirst.frc2084.CMonster2015.Robot;
import org.usfirst.frc2084.CMonster2015.drive.processors.LinearRamper;
import org.usfirst.frc2084.CMonster2015.drive.processors.TimeStepper;

import edu.wpi.first.wpilibj.command.Command;

/**
 * Command that rotates the robot to a certain angle.
 *
 * @author Ben Wolsieffer
 */
public class RotateToCommand extends Command {

	private boolean finished = false;
	private final double angle;
	private final TimeStepper timeStepper = new TimeStepper();
	private final LinearRamper ramper = new LinearRamper(0.3, LinearRamper.Type.UP);

	public RotateToCommand(double angle, double timeout) {
		super(timeout);
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		requires(Robot.driveSubsystem);
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		this.angle = angle;
	}

	@Override
	protected void initialize() {
		timeStepper.reset();
	}

	@Override
	protected void execute() {
		finished = Robot.driveSubsystem.getMecanumDriveAlgorithm().rotateTo(angle, ramper.process(1, timeStepper.step()));
	}

	@Override
	protected boolean isFinished() {
		return finished;
	}

	@Override
	protected void end() {
		Robot.driveSubsystem.getMecanumDriveAlgorithm().stop();
	}

	@Override
	protected void interrupted() {
		end();
	}
}
